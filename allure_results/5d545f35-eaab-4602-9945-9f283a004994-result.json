{"name": "Проверка некорректного ввода обязательного поля \"Адрес\" значением: \"\"", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = is_element_displayed(('xpath', './/input[contains(@placeholder, \"Адрес\")]/parent::div/div'))\n +    where is_element_displayed = <pages.order_page.OrderPage object at 0x7fa3273d06a0>.is_element_displayed", "trace": "self = <test_order_page.TestOrderPage object at 0x7fa3275594b0>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"c10a867a-4168-461c-abfa-9d81e93eaa87\")>\naddress = ''\nmessage_locator = ('xpath', './/input[contains(@placeholder, \"Адрес\")]/parent::div/div')\n\n    @allure.sub_suite('Тестирование оформления заказа при вводе некорректных данных')\n    @allure.title('Проверка некорректного ввода обязательного поля \"Адрес\" значением: \"{address}\"')\n    @allure.description('Заполняем поле Адреса формы оформления заказа некорректным значением '\n                        'и проверяем вывод сообщения \"Введите корректный адрес\"')\n    @pytest.mark.parametrize('address,message_locator',\n                             [('', OrderPageLocator.incorrect_address_div),\n                              ('Вок', OrderPageLocator.incorrect_address_div),\n                              ('Вокзаl', OrderPageLocator.incorrect_address_div)])\n    def test_fillup_incorrect_address_show_incorrect_message(self, driver: WebDriver,\n                                                             address: str,\n                                                             message_locator: tuple[str, str]\n                                                             ) -> None:\n        order_page = OrderPage(driver)\n        order_page.fillup_address(address)\n        order_page.open_second_order_stage_form()\n    \n>       assert order_page.is_element_displayed(message_locator)\nE       assert False\nE        +  where False = is_element_displayed(('xpath', './/input[contains(@placeholder, \"Адрес\")]/parent::div/div'))\nE        +    where is_element_displayed = <pages.order_page.OrderPage object at 0x7fa3273d06a0>.is_element_displayed\n\ntests/test_order_page.py:66: AssertionError"}, "description": "Заполняем поле Адреса формы оформления заказа некорректным значением и проверяем вывод сообщения \"Введите корректный адрес\"", "steps": [{"name": "Открываем страницу 'https://qa-scooter.praktikum-services.ru/order'", "status": "passed", "parameters": [{"name": "url", "value": "'https://qa-scooter.praktikum-services.ru/order'"}], "start": 1745106866822, "stop": 1745106869150}, {"name": "Подтвердить cookie", "status": "passed", "start": 1745106869150, "stop": 1745106870134}, {"name": "Заполнить поле \"Адрес\" формы оформления заказа", "status": "passed", "parameters": [{"name": "address", "value": "''"}], "start": 1745106870134, "stop": 1745106870450}, {"name": "Нажать на кнопке \"Далее\" формы оформления заказа", "status": "passed", "start": 1745106870450, "stop": 1745106870834}, {"name": "Проверка, отображается ли элемент на странице", "status": "passed", "parameters": [{"name": "element_locator", "value": "('xpath', './/input[contains(@placeholder, \"Адрес\")]/parent::div/div')"}], "start": 1745106870834, "stop": 1745106870914}], "parameters": [{"name": "address", "value": "''"}, {"name": "message_locator", "value": "('xpath', './/input[contains(@placeholder, \"Адрес\")]/parent::div/div')"}], "start": 1745106866822, "stop": 1745106870914, "uuid": "c1d3a301-20f8-47cb-8c84-9caba259804b", "historyId": "2988425beace6212afb70673210fcd59", "testCaseId": "3b4d711d195785387c25cef8f359a8a4", "fullName": "tests.test_order_page.TestOrderPage#test_fillup_incorrect_address_show_incorrect_message", "labels": [{"name": "suite", "value": "Тестирование страницы оформления заказа"}, {"name": "subSuite", "value": "Тестирование оформления заказа при вводе некорректных данных"}, {"name": "parentSuite", "value": "Тестирование сервиса заказа самоката"}, {"name": "host", "value": "desktop"}, {"name": "thread", "value": "301409-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}